###############################################################################
# Example invocation:
# ansible-playbook cluster-create.yml -e "cluster_name=foo"
#
###############################################################################
# Required args:
# cluster_name
###############################
---

- hosts: "{{ cluster_name }}_node"
  become: true
  vars:
    kubeadm_packages:
      - docker.io
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni

  tasks:
    - name: Reset kubeadm
      command: /usr/bin/kubeadm reset
      async: 45
      poll: 0      
      ignore_errors: true

    - name: Remove packages
      apt:
        name: '{{ kubeadm_packages | list }}'
        state: absent
        update_cache: true
      ignore_errors: true
      when: ansible_distribution == 'Ubuntu'      

    - name: Remove kubernetes repository (apt)
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent
      when: ansible_distribution == 'Ubuntu'

    - name: Update apt cache
      apt:
        update_cache: true

    - name: Remove immutable bit on /var/lib/kubelet
      command: chattr -Ri /var/lib/kubelet/
      ignore_errors: true
      when: ansible_distribution == 'Ubuntu'      

    - name: Remove kubernetes directorys
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /run/kubernetes
      ignore_errors: true

- hosts: "{{ cluster_name }}_master"
  become: true
  vars:
    kubeadm_packages:
      - docker.io
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni  
  tasks:
    - name: Reset kubeadm
      command: /usr/bin/kubeadm reset
      async: 45
      poll: 0
      ignore_errors: true
      
    - name: Remove packages
      apt:
        name: '{{ kubeadm_packages | list }}'
        state: absent
        update_cache: true
      ignore_errors: true
      when: ansible_distribution == 'Ubuntu'
      
    - name: Remove kubernetes repository (apt)
      file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent
      when: ansible_distribution == 'Ubuntu'

    - name: Update apt cache
      apt:
        update_cache: true      

    - name: Remove kubernetes directorys
      file:
        path: '{{ item }}'
        state: absent
      with_items:
        - /etc/kubernetes
        - /var/lib/kubelet
        - /run/kubernetes
        - /var/lib/etcd
      ignore_errors: true        

        
        
